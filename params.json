{"name":"Riding-rails","tagline":"Sample application for Ruby on Rails","body":"# Riding Rails Tutorial\r\nSample application for Ruby on Rails\r\n\r\nThis is the sample application for [*Ruby on Rails Tutorial: Learn Rails by Example*](http://railstutorial.org/) by [Michael Hartl](http://michaelhartl.com/).\r\n\r\nThis sample has been modified to run on Cloud Foundry. The `cf-autoconfig` gem was added to enable auto-configuration of database connections as described in the [Cloud Foundry documentation](http://docs.cloudfoundry.com/docs/using/services/ruby-service-bindings.html). The `pg` gem was also added to support connection to PostgreSQL database. \r\n\r\n## Running the application on Cloud Foundry\r\n\r\nAfter installing in the 'cf' [command-line interface for Cloud Foundry](http://docs.cloudfoundry.org/devguide/installcf/),\r\ntargeting a Cloud Foundry instance, and logging in, the application can be pushed using these commands:\r\n\r\nFirst, view a list of services and plans available in your Cloud Foundry instance: \r\n\r\n~~~\r\n$ cf marketplace\r\nGetting services from marketplace\r\nOK\r\n\r\nservice          plans                                                                 description\r\nblazemeter       free-tier, basic1kmr, pro5kmr, pp10kmr, hv40kmr                       The JMeter Load Testing Cloud\r\ncleardb          spark, boost, amp, shock                                              Highly available MySQL for your Apps.\r\ncloudamqp        lemur, tiger, bunny, rabbit, panda                                    Managed HA RabbitMQ servers in the cloud\r\ncloudforge       free, standard, pro                                                   Development Tools In The Cloud\r\nelephantsql      turtle, panda, hippo, elephant                                        PostgreSQL as a Service\r\nironmq           pro_platinum, pro_gold, large, medium, small, pro_silver              Powerful Durable Message Queueing Service\r\nironworker       large, pro_gold, pro_platinum, pro_silver, small, medium              Scalable Background and Async Processing\r\nloadimpact       lifree, li100, li500, li1000                                          Automated and on-demand performance testing\r\nmemcachedcloud   25mb, 100mb, 250mb, 500mb, 1gb, 2-5gb, 5gb                            Enterprise-Class Memcached for Developers\r\nmongolab         sandbox                                                               Fully-managed MongoDB-as-a-Service\r\nnewrelic         standard                                                              Manage and monitor your apps\r\nrediscloud       25mb, 100mb, 250mb, 500mb, 1gb, 2-5gb, 5gb, 10gb, 50gb                Enterprise-Class Redis for Developers\r\nsearchify        small, plus, pro                                                      Custom search you control\r\nsearchly         small, micro, professional, advanced, starter, business, enterprise   Search Made Simple. Powered-by ElasticSearch\r\nsendgrid         free, bronze, silver, gold, platinum                                  Email Delivery. Simplified.\r\n~~~\r\n\r\nChoose a PostgreSQL service from the list and create a service instance named `rails-postgres` using a PostgreSQL service and plan: \r\n\r\n~~~\r\n$ cf create-service SERVICE PLAN rails-postgres\r\nCreating service rails-postgres\r\nOK\r\n~~~\r\n\r\nNow push the application: \r\n\r\n~~~\r\n$ cf push APP-NAME --random-route\r\nUsing manifest file manifest.yml\r\n\r\nUpdating app rails-sample\r\nOK\r\n\r\nCreating route rails-sample-desiccative-acetylizer.cfapps.io...\r\nOK\r\n\r\nBinding rails-sample-desiccative-acetylizer.cfapps.io to rails-sample...\r\nOK\r\n\r\nUploading rails-sample...\r\nUploading app files from: rails_sample_app\r\nUploading 41.1M, 6349 files\r\nOK\r\nBinding service rails-postgres to app rails-sample\r\nOK\r\n\r\nStarting app rails-sample\r\nOK\r\n...\r\n\r\n0 of 1 instances running, 1 starting\r\n0 of 1 instances running, 1 starting\r\n0 of 1 instances running, 1 starting\r\n1 of 1 instances running\r\n\r\nApp started\r\n\r\nShowing health and status for app rails-sample\r\nOK\r\n\r\nrequested state: started\r\ninstances: 1/1\r\nusage: 256M x 1 instances\r\nurls: rails-sample-desiccative-acetylizer.cfapps.io\r\n\r\n     state     since                    cpu    memory          disk\r\n#0   running   2014-05-29 03:34:22 PM   0.0%   50.3M of 256M   80.2M of 1G\r\n~~~\r\n\r\nThe application will be pushed using settings in the provided `manifest.yml` file. The `--random-route` option adds random\r\nwords in the host to make sure the URL for the app is unique in the Cloud Foundry environment. The output of the\r\n`cf push` command shows the URL that was assigned. Using the provided URL you can browse to the running application.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}